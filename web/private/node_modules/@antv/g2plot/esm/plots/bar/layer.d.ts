import { LayerConfig } from '../../base/layer';
import ViewLayer, { ViewConfig } from '../../base/view-layer';
import { ElementOption, ICatAxis, ITimeAxis, IValueAxis, DataItem } from '../../interface/config';
import './component/label/bar-label';
import './theme';
interface BarStyle {
    opacity?: number;
    lineDash?: number[];
}
export interface BarViewConfig extends ViewConfig {
    colorField?: string;
    type?: 'rect';
    barSize?: number;
    maxWidth?: number;
    minWidth?: number;
    barStyle?: BarStyle | ((...args: any[]) => BarStyle);
    xAxis?: ICatAxis | ITimeAxis;
    yAxis?: IValueAxis;
}
export interface BarLayerConfig extends BarViewConfig, LayerConfig {
}
export default class BaseBarLayer<T extends BarLayerConfig = BarLayerConfig> extends ViewLayer<T> {
    static getDefaultOptions(): Partial<BarViewConfig>;
    bar: any;
    type: string;
    beforeInit(): void;
    afterRender(): void;
    protected geometryParser(dim: any, type: any): any;
    protected processData(data?: DataItem[]): DataItem[];
    protected scale(): void;
    protected coord(): void;
    protected adjustBar(bar: ElementOption): void;
    protected addGeometry(): void;
    protected animation(): void;
    protected extractLabel(): any;
    protected parseEvents(eventParser: any): void;
    private applyResponsive;
    getLabelOptionsByPosition(position: string): {
        offset: number;
        style?: undefined;
    } | {
        offset: number;
        style: {
            stroke: any;
            lineWidth: number;
        };
    };
}
export {};
