import { BBox, Group } from '@antv/g';
import ViewLayer, { ViewConfig } from '../../base/view-layer';
interface BulletStyle {
    /** 进度条大小 */
    size?: number;
    /** 进度条颜色 */
    color?: string;
}
export declare const STACK_FIELD = "$$type$$";
export interface BaseBulletViewConfig extends ViewConfig {
    goal: number;
    min?: number;
    /** 最大值 */
    max?: number;
    range?: number[];
    /** ticks */
    ticks?: {
        visible: boolean;
        values?: string[];
        style?: {
            fontSize?: number;
            lineHeight?: number;
        };
    };
    /** 进度条样式 */
    bulletStyle?: BulletStyle;
    /** 进度条背景条样式 */
    barStyle?: {};
    /** 进度条背景条宽度 */
    barSize?: number;
}
export default abstract class BaseBulletLayer<C extends BaseBulletViewConfig = BaseBulletViewConfig> extends ViewLayer<C> {
    bullet: any;
    abstract type: string;
    static getDefaultOptions(): Partial<BaseBulletViewConfig>;
    protected scale(): void;
    getOptions(props: C): C;
    afterRender(): void;
    /** @override */
    protected abstract drawBullets(): any;
    protected drawBullet(container: Group, box: BBox, value: number): void;
    /** 添加 ticks  */
    protected drawBulletTicks(container: Group, box: BBox): void;
    protected geometryParser(dim: any, type: any): any;
    protected coord(): void;
    /** 自定义子弹图图例 */
    protected legend(): void;
    protected addGeometry(): void;
    protected parseEvents(eventParser: any): void;
    protected adjustOptions(options: any): void;
    /** @override */
    protected abstract adjustDataOptions(options: any): any;
    /** @override */
    protected abstract adjustYAxisOptions(options: any): any;
}
export {};
